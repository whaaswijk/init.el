#+TITLE: Emacs configuration

The idea of organizing my Emacs configuration was shamelessly stolen
from Harry Schwartz, see [[https://www.youtube.com/watch?v=SzA2YODtgK4][here]].

* MELPA Connection

#+BEGIN_SRC emacs-lisp
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl
    (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  ;; Comment/uncomment these two lines to enable/disable MELPA and MELPA Stable as desired
  ;;(add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  (add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  (when (< emacs-major-version 24)
    ;; For important compatibility libraries like cl-lib
    (add-to-list 'package-archives (cons "gnu" (concat proto "://elpa.gnu.org/packages/")))))
(package-initialize)
#+END_SRC

* Set up SLIME
#+BEGIN_SRC emacs-lisp
(load (expand-file-name "~/quicklisp/slime-helper.el"))
(setq inferior-lisp-program "sbcl")
#+END_SRC

* UI/UX customization
#+BEGIN_SRC emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#242424" "#e5786d" "#95e454" "#cae682" "#8ac6f2" "#333366" "#ccaa8f" "#f6f3e8"])
 '(blink-cursor-mode nil)
 '(custom-enabled-themes (quote (wheatgrass)))
 '(menu-bar-mode nil)
 '(package-selected-packages
   (quote
    (org-bullets tabbar session pod-mode muttrc-mode mutt-alias markdown-mode initsplit htmlize graphviz-dot-mode folding eproject diminish csv-mode browse-kill-ring boxquote bm bar-cursor apache-mode)))
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "wheat" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 160 :width normal :foundry "PfEd" :family "DejaVu Sans Mono")))))
#+END_SRC
* Org-mode customization
  Show bullets instead of asterisks, and hide leading stars.
#+BEGIN_SRC emacs-lisp
  (require 'org-bullets)
  (add-hook 'org-mode-hook
            (lambda ()
              (org-bullets-mode t)))
  (setq org-hide-leading-stars t)
#+END_SRC

Allow for easy access to agenda.

#+BEGIN_SRC emacs-lisp
  (define-key global-map "\C-ca" 'org-agenda)
#+END_SRC

* Viewing PDF files

Use the pdf viewer from the pdf-tools package. This requires the
epdfinfo(1) program, which on Debian systems can be found in the
elpa-pdf-tools-server package.

#+BEGIN_SRC emacs-lisp
  (require 'pdf-view)
  (provide 'init-pdfview)
  (add-to-list 'auto-mode-alist '("\\.pdf\\'" . pdf-view-mode))
#+END_SRC
p
* C coding style

Use the Linux kernel style guidelines, taken from [[https://www.kernel.org/doc/html/v4.10/process/coding-style.html][here]].

#+BEGIN_SRC emacs-lisp
  (defun c-lineup-arglist-tabs-only (ignored)
    "Line up argument lists by tabs, not spaces"
    (let* ((anchor (c-langelem-pos c-syntactic-element))
           (column (c-langelem-2nd-pos c-syntactic-element))
           (offset (- (1+ column) anchor))
           (steps (floor offset c-basic-offset)))
      (* (max steps 1)
         c-basic-offset)))

  (add-hook 'c-mode-common-hook
            (lambda ()
              ;; Add kernel style
              (c-add-style
               "linux-tabs-only"
               '("linux" (c-offsets-alist
                          (arglist-cont-nonempty
                           c-lineup-gcc-asm-reg
                           c-lineup-arglist-tabs-only))))))

  (add-hook 'c-mode-hook
            (lambda ()
              (setq indent-tabs-mode t)
              (setq show-trailing-whitespace t)
	      ;; Makes pressing Backspace delete an entire tab
	      ;; instead of turning the tab into spaces.
	      (setq backward-delete-char-untabify-method 'hungry)
              (c-set-style "linux-tabs-only")))
#+END_SRC
